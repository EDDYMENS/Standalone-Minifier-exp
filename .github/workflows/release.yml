name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'
permissions:
    contents: write
    packages: write 
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Build binary for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            deno compile --allow-read --allow-write --target x86_64-unknown-linux-gnu --output minifier-linux minifier.ts
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            deno compile --allow-read --allow-write --target x86_64-apple-darwin --output minifier-darwin minifier.ts
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: minifier-${{ matrix.os }}
          path: |
            minifier-linux
            minifier-darwin

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: minifier-ubuntu-latest
          path: ./bin

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: minifier-macos-latest
          path: ./bin

      - name: Create GitHub release
        uses: softprops/action-gh-release@v3
        with:
          files: |
            ./bin/minifier-linux
            ./bin/minifier-darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log release URL
        run: echo "Release created at ${{ steps.create_release.outputs.html_url }}"
